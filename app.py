import streamlit as st
import numpy as np
import pandas as pd
from model import MyLogisticRegression

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥–µ–ª—ñ
model = MyLogisticRegression()

st.title("üö¢ Titanic Survival Prediction")
st.markdown("–í–≤–µ–¥–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–∞—Å–∞–∂–∏—Ä–∞:")

# –í–≤—ñ–¥ –æ–∑–Ω–∞–∫
Pclass = st.selectbox("–ö–ª–∞—Å", [1, 2, 3])
Sex = st.selectbox("–°—Ç–∞—Ç—å", ["—á–æ–ª–æ–≤—ñ–∫", "–∂—ñ–Ω–∫–∞"])
Age = st.slider("–í—ñ–∫", 0, 80, 25)
SibSp = st.number_input("–ö-—Ç—å –±—Ä–∞—Ç—ñ–≤/—Å–µ—Å—Ç–µ—Ä –∞–±–æ —á–æ–ª–æ–≤—ñ–∫–∞/–¥—Ä—É–∂–∏–Ω–∏", 0, 10, 0)
Parch = st.number_input("–ö-—Ç—å –±–∞—Ç—å–∫—ñ–≤/–¥—ñ—Ç–µ–π", 0, 10, 0)
Fare = st.slider("–¶—ñ–Ω–∞ –∫–≤–∏—Ç–∫–∞", 0.0, 600.0, 50.0)
Embarked = st.selectbox("–ü–æ—Ä—Ç –ø–æ—Å–∞–¥–∫–∏", ["S", "C", "Q"])

# –û–±—á–∏—Å–ª–µ–Ω–Ω—è —Ñ—ñ—á–µ–π
FamilySize = SibSp + Parch + 1
IsAlone = int(FamilySize == 1)

# –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö —É —Ñ–æ—Ä–º–∞—Ç –º–æ–¥–µ–ª—ñ
features = {
    'Age': Age,
    'SibSp': SibSp,
    'Parch': Parch,
    'Fare': Fare,
    'FamilySize': FamilySize,
    'IsAlone': IsAlone,
    'male': 1 if Sex == "—á–æ–ª–æ–≤—ñ–∫" else 0,
    'Q': 1 if Embarked == "Q" else 0,
    'S': 1 if Embarked == "S" else 0,
    'Pclass_2': 1 if Pclass == 2 else 0,
    'Pclass_3': 1 if Pclass == 3 else 0
}

X_input = pd.DataFrame([features])
X_array = X_input.to_numpy()

# –ü–µ—Ä–µ–¥–±–∞—á–µ–Ω–Ω—è
if st.button("üîÆ –ü–µ—Ä–µ–¥–±–∞—á–∏—Ç–∏"):
    result = model.predict(X_array)[0]
    prob = model.predict_prob(X_array)[0]
    msg = "‚úÖ –í–∏–∂–∏–≤" if result == 1 else "‚ùå –ù–µ –≤–∏–∂–∏–≤"
    st.subheader(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {msg}")
    st.markdown(f"**–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å –≤–∏–∂–∏–≤–∞–Ω–Ω—è:** {prob:.2%}")
